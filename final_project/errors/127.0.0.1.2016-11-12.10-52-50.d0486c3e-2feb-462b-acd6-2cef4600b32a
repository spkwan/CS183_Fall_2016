(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> <gluon.validators.IS_EMPTY_OR object at 0x110647bd0> is not JSON serializable"
p3
sS'layer'
p4
S'/Users/Steven/Documents/CS183/web2py/applications/final_project/controllers/api.py'
p5
sS'code'
p6
S'def index():\n    pass\n\ndef get_user_name_from_email(email):\n    """Returns a string corresponding to the user first and last names,\n    given the user email."""\n    u = db(db.auth_user.email == email).select().first()\n    if u is None:\n        return \'None\'\n    else:\n        return \' \'.join([u.first_name, u.last_name])\n\ndef get_posts():\n    start_idx = int(request.vars.start_idx) if request.vars.start_idx is not None else 0\n    end_idx = int(request.vars.end_idx) if request.vars.end_idx is not None else 0\n    posts = []\n    has_more = False\n    rows = db().select(db.post.ALL, limitby=(start_idx, end_idx + 1), orderby=~db.post.created_on)\n    for i, r in enumerate(rows):\n        if i < end_idx - start_idx:\n            # If the user is the original poster of the post\n            if auth.user is not None:\n                if auth.user.email == r.user_email:\n                    op = True\n                else:\n                    op = False\n            else:\n                op = False\n\n            rply = db(db.reply.id == r.reply_id)\n\n            p = dict(\n                id = r.id,\n                user_email = get_user_name_from_email(r.user_email),\n                post_content = r.post_content,\n                created_on = r.created_on,\n                updated_on = r.updated_on,\n                reply_id = rply,\n                op = op\n            )\n            posts.append(p)\n\n        else:\n            has_more = True\n    logged_in = auth.user_id is not None\n    return response.json(dict(posts=posts, logged_in=logged_in, has_more=has_more))\n\n# Note that we need the URL to be signed, as this changes the db.\n@auth.requires_signature()\ndef add_post():\n    p_id = db.post.insert(\n        post_content = request.vars.post_content\n    )\n    p = db.post(p_id)\n    return response.json(dict(post=p))\n\n@auth.requires_signature()\ndef del_post():\n    db(db.post.id == request.vars.post_id).delete()\n    return "ok"\n\n@auth.requires_signature()\ndef edit_post():\n    p = db(db.post.id == request.vars.post_id).select().first()\n    # Only modify database if edited post is different.\n    if p.post_content != request.vars.post_content:\n        p.post_content = request.vars.post_content\n        p.updated_on = datetime.datetime.utcnow()\n        p.update_record()\n    else:\n        pass\n    return response.json(dict(post=p))\n\n@auth.requires_signature()\ndef reply_post():\n    p_id = db.post.insert(\n        post_content=request.vars.reply_content,\n        reply_id = request.vars.reply_post_id\n    )\n    p = db.post(p_id)\n    return response.json(dict(post=p))\nresponse._vars=response._caller(get_posts)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.TypeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.TypeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.TypeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.TypeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.TypeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.TypeError object>'
p23
sS'args'
p24
S"('<gluon.validators.IS_EMPTY_OR object at 0x110647bd0> is not JSON serializable',)"
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.TypeError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.TypeError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.TypeError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.TypeError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.TypeError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.TypeError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.TypeError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.TypeError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.TypeError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument type.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.TypeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'<gluon.validators.IS_EMPTY_OR object at 0x110647bd0> is not JSON serializable'
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S's\x97d\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>final_project</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>api</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-0b77877e-c9da-45f5-af4c-50e3295289ce<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_final_project</td><td style="vertical-align:top;">:</td><td><div>49:e9d86637-f662-4613-ac81-2aa7b0d96bc5<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_web2py_start_2016</td><td style="vertical-align:top;">:</td><td><div>10:ccd1bd39-0c3b-4412-b610-6170dfdc258b<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-9c0d18f5-3534-4081-bff1-2136d35423f0<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>application/json, text/javascript, */*; q=0.01</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-9c0d18f5-3534-4081-bff1-2136d35423f0; session_id_admin=127.0.0.1-0b77877e-c9da-45f5-af4c-50e3295289ce; session_id_web2py_start_2016=&quot;10:ccd1bd39-0c3b-4412-b610-6170dfdc258b&quot;; session_id_final_project=&quot;49:e9d86637-f662-4613-ac81-2aa7b0d96bc5&quot;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/final_project/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_X_REQUESTED_WITH</td><td style="vertical-align:top;">:</td><td><div>XMLHttpRequest</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/final_project/api/get_posts</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div>start_idx=0&amp;end_idx=4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>53500</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>eduroam-169-233-211-111.ucsc.edu</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/Steven/Documents/CS183/web2py/applications/admin/&#x27;, &#x27;/Users/Steven/Documents/CS183/web2py/applications/final_project/&#x27;, &#x27;/Users/Steven/Documents/CS183/web2py/applications/web2py_start_2016/&#x27;, &#x27;/Users/Steven/Documents/CS183/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/Steven/Documents/CS183/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x10a3cb950: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;eduroam-169-233-211-111.ucsc.edu&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: True, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/Steven/Documents/CS183/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;web2py_start_2016&#x27;, &#x27;final_project&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/Steven/Documents/CS183/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>application/json, text/javascript, */*; q=0.01</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-9c0d18f5-3534-4081-bff1-2136d35423f0; session_id_admin=127.0.0.1-0b77877e-c9da-45f5-af4c-50e3295289ce; session_id_web2py_start_2016=&quot;10:ccd1bd39-0c3b-4412-b610-6170dfdc258b&quot;; session_id_final_project=&quot;49:e9d86637-f662-4613-ac81-2aa7b0d96bc5&quot;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/final_project/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_x_requested_with</td><td style="vertical-align:top;">:</td><td><div>XMLHttpRequest</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>eduroam-169-233-211-111.ucsc.edu</div></td></tr><tr><td><div>169.233.211.111</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/final_project/api/get_posts</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div>start_idx=0&amp;end_idx=4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>53500</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/final_project/api/get_posts?start_idx=0&amp;end_idx=4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>eduroam-169-233-211-111.ucsc.edu</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/Users/Steven/Documents/CS183/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x1093de1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x10a367a10&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x1103ba1d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x1093de1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x10a367a10&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x1103ba1d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/Users/Steven/Documents/CS183/web2py/applications/final_project/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>get_posts</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/Steven/Documents/CS183/web2py/applications/admin/&#x27;, &#x27;/Users/Steven/Documents/CS183/web2py/applications/final_project/&#x27;, &#x27;/Users/Steven/Documents/CS183/web2py/applications/web2py_start_2016/&#x27;, &#x27;/Users/Steven/Documents/CS183/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/Steven/Documents/CS183/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x10a3cb950: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;eduroam-169-233-211-111.ucsc.edu&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: True, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/Steven/Documents/CS183/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;web2py_start_2016&#x27;, &#x27;final_project&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/Steven/Documents/CS183/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>eduroam-169-233-211-111.ucsc.edu</div></td></tr><tr><td><div>169.233.211.111</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 11, 12, 10, 52, 50, 526284)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/final_project/api/get_posts</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 11, 12, 18, 52, 50, 526298)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x110a80710&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/Users/Steven/Documents/CS183/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0x1106ffbb0, file "/Use...ations/final_project/controllers/api.py", line 1>'
p69
ssS'lnum'
p70
I227
sS'lines'
p71
(dp72
I224
S'            ccode = code'
p73
sI225
S'        else:'
p74
sI226
S'            ccode = compile2(code, layer)'
p75
sI227
S'        exec ccode in environment'
p76
sI228
S'    except HTTP:'
p77
sI229
S'        raise'
p78
sI230
S'    except RestrictedError:'
p79
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p80
sI222
S'    try:'
p81
sI223
S'        if isinstance(code, types.CodeType):'
p82
ssS'call'
p83
S"(code='def index():\\n    pass\\n\\ndef get_user_name_from_em...t=p))\\nresponse._vars=response._caller(get_posts)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer='/Users/Steven/Documents/CS183/web2py/applications/final_project/controllers/api.py')"
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'/Users/Steven/Documents/CS183/web2py/applications/final_project/controllers/api.py'
p88
sg64
(dp89
sg70
I82
sg71
(dp90
I72
S'    return response.json(dict(post=p))'
p91
sI73
S''
sI74
S'@auth.requires_signature()'
p92
sI75
S'def reply_post():'
p93
sI76
S'    p_id = db.post.insert('
p94
sI77
S'        post_content=request.vars.reply_content,'
p95
sI78
S'        reply_id = request.vars.reply_post_id'
p96
sI79
S'    )'
p97
sI80
S'    p = db.post(p_id)'
p98
sI81
S'    return response.json(dict(post=p))'
p99
ssg83
S'()'
p100
sg85
S'<module>'
p101
sa(dp102
g62
S'/Users/Steven/Documents/CS183/web2py/gluon/globals.py'
p103
sg64
(dp104
S'self'
p105
S'undefined'
p106
sS'f'
S'<function get_posts>'
p107
ssg70
I417
sg71
(dp108
I416
S'        self._vars = None'
p109
sI417
S'        self._caller = lambda f: f()'
p110
sI418
S'        self._view_environment = None'
p111
sI419
S'        self._custom_commit = None'
p112
sI420
S'        self._custom_rollback = None'
p113
sI421
S"        self.generic_patterns = ['*']"
p114
sI412
S"        self.flash = ''            # used by the default view layout"
p115
sI413
S'        self.meta = Storage()      # used by web2py_ajax.html'
p116
sI414
S'        self.menu = []             # used by the default view layout'
p117
sI415
S'        self.files = []            # used by web2py_ajax.html'
p118
ssg83
S'(f=<function get_posts>)'
p119
sg85
S'<lambda>'
p120
sa(dp121
g62
S'/Users/Steven/Documents/CS183/web2py/applications/final_project/controllers/api.py'
p122
sg64
(dp123
S'has_more'
p124
S'True'
p125
sS'posts'
p126
S"[{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]"
p127
sS'global response'
p128
S"<Storage {'body': <cStringIO.StringO object at 0...y, session_data)>, 'view': 'api/get_posts.html'}>"
p129
sS'response.json'
p130
S"<bound method Response.json of <Storage {'body':..., session_data)>, 'view': 'api/get_posts.html'}>>"
p131
sS'logged_in'
p132
g125
sS'builtindict'
p133
S"<type 'dict'>"
p134
ssg70
I46
sg71
(dp135
I41
S'            posts.append(p)'
p136
sI42
S''
sI43
S'        else:'
p137
sI44
S'            has_more = True'
p138
sI45
S'    logged_in = auth.user_id is not None'
p139
sI46
S'    return response.json(dict(posts=posts, logged_in=logged_in, has_more=has_more))'
p140
sI47
S''
sI48
S'# Note that we need the URL to be signed, as this changes the db.'
p141
sI49
S'@auth.requires_signature()'
p142
sI50
S'def add_post():'
p143
ssg83
S'()'
p144
sg85
S'get_posts'
p145
sa(dp146
g62
S'/Users/Steven/Documents/CS183/web2py/gluon/globals.py'
p147
sg64
(dp148
S'default'
p149
S'None'
p150
sS'global custom_json'
p151
S'<function custom_json>'
p152
sS'global json'
p153
S'<function json>'
p154
sS'data'
p155
S"{'has_more': True, 'logged_in': True, 'posts': [{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]}"
p156
ssg70
I661
sg71
(dp157
I656
S'        return self.stream(stream, chunk_size=chunk_size, request=request)'
p158
sI657
S''
sI658
S'    def json(self, data, default=None):'
p159
sI659
S"        if 'Content-Type' not in self.headers:"
p160
sI660
S"            self.headers['Content-Type'] = 'application/json'"
p161
sI661
S'        return json(data, default=default or custom_json)'
p162
sI662
S''
sI663
S'    def xmlrpc(self, request, methods):'
p163
sI664
S'        """'
p164
sI665
S'        assuming::'
p165
ssg83
S"(self=<Storage {'body': <cStringIO.StringO object at 0...y, session_data)>, 'view': 'api/get_posts.html'}>, data={'has_more': True, 'logged_in': True, 'posts': [{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]}, default=None)"
p166
sg85
S'json'
p167
sa(dp168
g62
S'/Users/Steven/Documents/CS183/web2py/gluon/serializers.py'
p169
sg64
(dp170
S'default'
p171
S'<function custom_json>'
p172
sS'json_parser.dumps'
p173
S'<function dumps>'
p174
sS'global json_parser'
p175
S"<module 'json' from '/System/Library/Frameworks/...rk/Versions/2.7/lib/python2.7/json/__init__.pyc'>"
p176
sS'value'
p177
S"{'has_more': True, 'logged_in': True, 'posts': [{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]}"
p178
ssg70
I137
sg71
(dp179
I132
S''
sI133
S'def json(value, default=custom_json):'
p180
sI134
S'    if decimal_false_option:'
p181
sI135
S'        value = json_parser.dumps(value, default=default, use_decimal=False)'
p182
sI136
S'    else:'
p183
sI137
S'        value = json_parser.dumps(value, default=default)'
p184
sI138
S''
sI139
S'    # replace JavaScript incompatible spacing'
p185
sI140
S'    # http://timelessrepo.com/json-isnt-a-javascript-subset'
p186
sI141
S"    return value.replace(ur'\\u2028', '\\\\u2028').replace(ur'\\2029', '\\\\u2029')"
p187
ssg83
S"(value={'has_more': True, 'logged_in': True, 'posts': [{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]}, default=<function custom_json>)"
p188
sg85
g167
sa(dp189
g62
S'/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py'
p190
sg64
(dp191
S'obj'
p192
S"{'has_more': True, 'logged_in': True, 'posts': [{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]}"
p193
sS'sort_keys'
p194
S'False'
p195
sS'kw'
p196
g45
sS').encode'
p197
g106
ssg70
I250
sg71
(dp198
I245
S'        cls = JSONEncoder'
p199
sI246
S'    return cls('
p200
sI247
S'        skipkeys=skipkeys, ensure_ascii=ensure_ascii,'
p201
sI248
S'        check_circular=check_circular, allow_nan=allow_nan, indent=indent,'
p202
sI249
S'        separators=separators, encoding=encoding, default=default,'
p203
sI250
S'        sort_keys=sort_keys, **kw).encode(obj)'
p204
sI251
S''
sI252
S''
sI253
S'_default_decoder = JSONDecoder(encoding=None, object_hook=None,'
p205
sI254
S'                               object_pairs_hook=None)'
p206
ssg83
S"(obj={'has_more': True, 'logged_in': True, 'posts': [{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]}, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=<class 'json.encoder.JSONEncoder'>, indent=None, separators=None, encoding='utf-8', default=<function custom_json>, sort_keys=False, **kw={})"
p207
sg85
S'dumps'
p208
sa(dp209
g62
S'/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py'
p210
sg64
(dp211
S'self'
p212
S'<json.encoder.JSONEncoder object>'
p213
sS'o'
S"{'has_more': True, 'logged_in': True, 'posts': [{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]}"
p214
sS'self.iterencode'
p215
S'<bound method JSONEncoder.iterencode of <json.encoder.JSONEncoder object>>'
p216
sS'_one_shot'
p217
g106
sS'chunks'
p218
g106
sS'builtinTrue'
p219
g125
ssg70
I207
sg71
(dp220
I202
S'            else:'
p221
sI203
S'                return encode_basestring(o)'
p222
sI204
S"        # This doesn't pass the iterator directly to ''.join() because the"
p223
sI205
S"        # exceptions aren't as detailed.  The list call should be roughly"
p224
sI206
S"        # equivalent to the PySequence_Fast that ''.join() would do."
p225
sI207
S'        chunks = self.iterencode(o, _one_shot=True)'
p226
sI208
S'        if not isinstance(chunks, (list, tuple)):'
p227
sI209
S'            chunks = list(chunks)'
p228
sI210
S"        return ''.join(chunks)"
p229
sI211
S''
ssg83
S"(self=<json.encoder.JSONEncoder object>, o={'has_more': True, 'logged_in': True, 'posts': [{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]})"
p230
sg85
S'encode'
p231
sa(dp232
g62
S'/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py'
p233
sg64
(dp234
S'_iterencode'
p235
S'<_json.Encoder object>'
p236
sS'o'
S"{'has_more': True, 'logged_in': True, 'posts': [{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]}"
p237
ssg70
I270
sg71
(dp238
I265
S'        else:'
p239
sI266
S'            _iterencode = _make_iterencode('
p240
sI267
S'                markers, self.default, _encoder, self.indent, floatstr,'
p241
sI268
S'                self.key_separator, self.item_separator, self.sort_keys,'
p242
sI269
S'                self.skipkeys, _one_shot)'
p243
sI270
S'        return _iterencode(o, 0)'
p244
sI271
S''
sI272
S'def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,'
p245
sI273
S'        _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot,'
p246
sI274
S'        ## HACK: hand-optimized bytecode; turn globals into locals'
p247
ssg83
S"(self=<json.encoder.JSONEncoder object>, o={'has_more': True, 'logged_in': True, 'posts': [{'created_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'id': 207L, 'op': True, 'post_content': 'skdflskdf', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 15, 51, 17), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'id': 206L, 'op': True, 'post_content': 'FUCK', 'reply_id': <Set (reply.id = 184)>, 'updated_on': datetime.datetime(2016, 11, 12, 5, 31, 25), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'id': 205L, 'op': True, 'post_content': 'Why', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 22, 8, 59), 'user_email': 'Steven Kwan'}, {'created_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'id': 204L, 'op': True, 'post_content': 'kjjjjj', 'reply_id': <Set (reply.id IS NULL)>, 'updated_on': datetime.datetime(2016, 11, 11, 21, 49, 12), 'user_email': 'Steven Kwan'}]}, _one_shot=True)"
p248
sg85
S'iterencode'
p249
sa(dp250
g62
S'/Users/Steven/Documents/CS183/web2py/gluon/serializers.py'
p251
sg64
(dp252
S'builtinrepr'
p253
S'<built-in function repr>'
p254
sS'builtinTypeError'
p255
S"<type 'exceptions.TypeError'>"
p256
sS'o'
S'<gluon.validators.IS_EMPTY_OR object>'
p257
ssg70
I110
sg71
(dp258
I105
S"    elif hasattr(o, 'as_list') and callable(o.as_list):"
p259
sI106
S'        return o.as_list()'
p260
sI107
S"    elif hasattr(o, 'as_dict') and callable(o.as_dict):"
p261
sI108
S'        return o.as_dict()'
p262
sI109
S'    else:'
p263
sI110
S'        raise TypeError(repr(o) + " is not JSON serializable")'
p264
sI111
S''
sI112
S''
sI113
S'def xml_rec(value, key, quote=True):'
p265
sI114
S"    if hasattr(value, 'custom_xml') and callable(value.custom_xml):"
p266
ssg83
S'(o=<gluon.validators.IS_EMPTY_OR object>)'
p267
sg85
S'custom_json'
p268
sasS'pyver'
p269
S'Python 2.7.10: /usr/bin/python (prefix: /System/Library/Frameworks/Python.framework/Versions/2.7)'
p270
sS'session'
p271
g57
(S's\xe7\x08\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>24e57334-a5bf-489a-a8d4-53e6dc2855b5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 11, 12, 10, 46, 49, 648935)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>spkwan@ucsc.edu</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>Steven</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>1L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Kwan</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">1</td><td style="vertical-align:top;">:</td><td><div>user_1</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div>'
tRp272
sS'etype'
p273
S"<type 'exceptions.TypeError'>"
p274
sS'date'
p275
S'Sat Nov 12 10:52:50 2016'
p276
sS'response'
p277
g57
(S's\xff\x1b\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x110326d50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_final_project</td><td style="vertical-align:top;">:</td><td><div>49:e9d86637-f662-4613-ac81-2aa7b0d96bc5<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">Content-Type</td><td style="vertical-align:top;">:</td><td><div>application/json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>web2py</div></td></tr><tr><td><div>python</div></td></tr><tr><td><div>framework</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^api/\\w+\\.py$</div></td></tr><tr><td><div>^api/get_posts/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_final_project</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_db_record_id</td><td style="vertical-align:top;">:</td><td><div>49L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_db_table</td><td style="vertical-align:top;">:</td><td><div>&lt;Table web2py_session_final_project (id, locked, client_ip, created_datetime, modified_datetime, unique_key, session_data)&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_db_unique_key</td><td style="vertical-align:top;">:</td><td><div>e9d86637-f662-4613-ac81-2aa7b0d96bc5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>93234a7977d724d55caed2527c9bcf93</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>49:e9d86637-f662-4613-ac81-2aa7b0d96bc5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_final_project</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>final_project</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>db</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Final Project</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>api/get_posts.html</div></td></tr></table></div>'
tRp278
sS'locals'
p279
(dp280
S'o'
S'<gluon.validators.IS_EMPTY_OR object>'
p281
sssS'traceback'
p282
S'Traceback (most recent call last):\n  File "/Users/Steven/Documents/CS183/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/Users/Steven/Documents/CS183/web2py/applications/final_project/controllers/api.py", line 82, in <module>\n  File "/Users/Steven/Documents/CS183/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/Steven/Documents/CS183/web2py/applications/final_project/controllers/api.py", line 46, in get_posts\n    return response.json(dict(posts=posts, logged_in=logged_in, has_more=has_more))\n  File "/Users/Steven/Documents/CS183/web2py/gluon/globals.py", line 661, in json\n    return json(data, default=default or custom_json)\n  File "/Users/Steven/Documents/CS183/web2py/gluon/serializers.py", line 137, in json\n    value = json_parser.dumps(value, default=default)\n  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py", line 250, in dumps\n    sort_keys=sort_keys, **kw).encode(obj)\n  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py", line 207, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py", line 270, in iterencode\n    return _iterencode(o, 0)\n  File "/Users/Steven/Documents/CS183/web2py/gluon/serializers.py", line 110, in custom_json\n    raise TypeError(repr(o) + " is not JSON serializable")\nTypeError: <gluon.validators.IS_EMPTY_OR object at 0x110647bd0> is not JSON serializable\n'
p283
s.